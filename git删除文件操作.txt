Git 删除文件

rm file 删除本地文件 移到缓存区

使用
git checkout -- file 可把文件从缓存区恢复到工作区

使用 
Git rm file 将工作区  当前工作版本库删除 移到缓存区

使用 git reset HEAD -- file 可恢复文件到当前工作版本库和工作区

重要的事情说三遍 重要的事情说三遍 重要的事情说三遍 

只要使用了 git commit命令 都是向版本提交一个版本 提交之后 当前工作的版本库是一个新的版本（包含上一个版本库的内容） 

使用git rm 删除的是当前工作的版本库内容 
当前工作版本库有上一个版本库的内容



同样的和上面一样

使用 git reset HEAD -- file 可恢复文件到当前工作版本库和工作区

但是不幸的是 你可能使用了 


git commit 提交一个删除文件后的版本


此时当前工作版本就是删掉文件后的版本 缓存区也没有了删掉的文件  


你又想恢复版本库的文件


于是你是用
git reset HEAD -- file 或者 git checkout -- file

结果是：
你在当前工作版本库 再也找不到
匹配的内容了 

想要恢复当前工作版本库的内容 使用

Git reflog 找到上上一个版本 再使用git reset --hard 恢复即可（同样的代价就是 所有当前工作区的内容都将替换为上上版本库的内容 所以需要备份当前工作区的内容 再执行Reset命令 然后CP回来即可 非常重要！！！！！ 如果删除一个文件之后 其他文件也修改了 你没有commit 又没有在恢复之前复制到其他地方 你将丢失的不仅仅是删除的文件 还有修改后的文件内容！！！！！！）

恢复到上上一个版本找回的文件 在之前必须提交过 如果是当前工作区新建的 仅仅是add  还没有commit 你使用了 git rm 对不起  

git checkout -- file

如果没有备份

无论如何都是是找不到的

你将丢失文件了 




